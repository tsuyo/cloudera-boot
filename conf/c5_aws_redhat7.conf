include required(file("site"))

name: c5_aws_redhat7_with_cboot

provider {
  type: aws
  accessKeyId: ${?AWS_ACCESS_KEY_ID}
  secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}
  region: ${region}
  subnetId: ${subnetId}
  securityGroupsIds: ${securityGroupsIds}
  instanceNamePrefix: cboot_cdh${cdh.version}
}

ssh {
  username: centos
  privateKey: ${?SSH_PRIVATE_KEY} # with an absolute path to .pem file
}

common-instance-properties {
  image: ${image}
  tags {
    owner: ${owner}
    enddate: ${enddate}
    project: "personal development"
  }
}

instances {
  m5x: ${common-instance-properties} {
    type: m5.xlarge
  }
  t2: ${common-instance-properties} {
    type: t2.large
  }
}

cloudera-manager {
  instance: ${instances.m5x} {
    tags {
      application: "Cloudera Manager 5"
    }
  }
  enableEnterpriseTrial: true
  repository: "https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/"${cm.version}
  repositoryKeyUrl: "https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera"
  configs {
    CLOUDERA_MANAGER {
      enable_api_debug: true
      custom_banner_html: cdh${cdh.version} with cboot
    }
  }
}

cluster {
  products {
    CDH: 5
    KAFKA: 3
  }
  parcelRepositories: [
    "https://archive.cloudera.com/cdh5/parcels/"${cdh.version}"/",
    "https://archive.cloudera.com/kafka/parcels/3/"
  ]
  services: [
    HDFS,
    YARN,
    ZOOKEEPER,
    HBASE,
    HIVE,
    HUE,
    OOZIE,
    SPARK_ON_YARN,
    KAFKA,
    SOLR,
    FLUME,
    IMPALA,
    SQOOP_CLIENT,
    KS_INDEXER,
    # KUDU
  ]

  masters {
    count: 1
    instance: ${instances.m5x} {
      tags: {
        group: master
      }
    }
    roles {
      HDFS: [NAMENODE, SECONDARYNAMENODE]
      YARN: [RESOURCEMANAGER, JOBHISTORY]
      ZOOKEEPER: [SERVER]
      HBASE: [MASTER, HBASETHRIFTSERVER]
      HIVE: [HIVESERVER2, HIVEMETASTORE]
      HUE: [HUE_SERVER]
      OOZIE: [OOZIE_SERVER]
      SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER]
      KAFKA: [KAFKA_BROKER]
      SOLR: [SOLR_SERVER]
      # KUDU: [KUDU_MASTER]
      IMPALA: [CATALOGSERVER, STATESTORE]
      KS_INDEXER: [HBASE_INDEXER]
    }
    configs {
      # KUDU {
      #   KUDU_MASTER {
      #     fs_wal_dir: "/data0/kudu/masterwal"
      #     fs_data_dirs: "/data1/kudu/master"
      #   }
      # }
    }
  }

  workers {
    count: 3
    minCount: 3
    instance: ${instances.m5x} {
      tags: {
        group: worker
      }
    }
    roles {
      HDFS: [DATANODE]
      YARN: [NODEMANAGER]
      HBASE: [REGIONSERVER]
      FLUME: [AGENT]
      IMPALA: [IMPALAD]
      # KUDU: [KUDU_TSERVER]
    }
    configs {
      # KUDU {
      #   KUDU_TSERVER {
      #     fs_wal_dir: "/data0/kudu/tabletwal"
      #     fs_data_dirs: "/data1/kudu/tablet"
      #   }
      # }
    }
  }

  gateways {
    count: 1
    instance: ${instances.t2} {
      tags: {
        group: gateway
      }
    }
    roles {
      HDFS: [GATEWAY]
      YARN: [GATEWAY]
      HBASE: [GATEWAY]
      HIVE: [GATEWAY]
      SPARK_ON_YARN: [GATEWAY]
      KAFKA: [GATEWAY]
      SOLR: [GATEWAY]
      SQOOP_CLIENT: [GATEWAY]
    }
  }

}
